@page "/login"
@using BlazorPruebaTecnica.Client.Services

@inject IAuthService authService;
@inject NavigationManager navegacion;

<h3 class="text-center mb-4">Iniciar Sesión</h3>

<div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="card p-4 shadow-lg" style="width: 350px;">
        <EditForm Model="loginModel" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>

            <div class="form-group mb-3">
                <label class="form-label" for="email">Email</label>
                <InputText id="email" class="form-control" @bind-Value="loginModel.Email" placeholder="Correo electrónico" />
                <ValidationMessage For="@(() => loginModel.Email)" class="text-danger"></ValidationMessage>
            </div>

            <div class="form-group mb-3">
                <label class="form-label" for="password">Contraseña</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" placeholder="Contraseña" />
                <ValidationMessage For="@(() => loginModel.Password)" class="text-danger"></ValidationMessage>
            </div>

            <button class="btn btn-primary w-100 mb-2" type="submit">Iniciar sesión</button>

            <div class="mt-3 text-center">
                <a href="#" class="text-muted">¿Olvidaste tu contraseña?</a>
            </div>

            <!-- Botón de Registrarse -->
            <button class="btn btn-outline-secondary w-100 mt-3" @onclick="RedirectToRegister">Registrarse</button>
        </EditForm>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task OnValidSubmit()
    {
        var result = await authService.LoginAsync(loginModel.Email, loginModel.Password);
        if (result)
        {
            navegacion.NavigateTo("/client");
        }
        else
        {
            // Aquí puedes agregar un mensaje de error si el login falla
            // Por ejemplo, usando una propiedad booleana o un mensaje para mostrar al usuario.
            Console.WriteLine("Login fallido");
        }
    }

    private void RedirectToRegister()
    {
        navegacion.NavigateTo("/register");
    }

    public class LoginModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }
}